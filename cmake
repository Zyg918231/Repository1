
git和svn的区别
1、Git是分布式版本控制系统，SVN是集中式版本控制系统
2、git保存的是文件变化后的快照，svn保存的是文件的变化
3、git可以本地建立分支，svn只能建立远程分支

Git的工作原理是什么？
Git基于快照（snapshot）而非差异（diff）的方式来处理文件变化。它将文件和目录的快照保存在一个称为“仓库（repository）”的数据库中。当提交（commit）时，
Git会创建一个指向该快照的指针，并将该指针添加到版本历史中。Git使用分支（branch）来指向不同的提交，从而支持并行开发和特性隔离。

git rebase 和 merge 的区别

Merge（合并）：Merge是将两个或多个分支的修改合并到一个新的提交中。当你执行merge操作时，Git会创建一个新的提交，包含了被合并分支的所有修改。这个新的提交会有两个或多个父节点，分别指向被合并的分支。Merge操作会保留被合并分支的完整历史记录，因此可以清晰地看到每个分支的修改。

Rebase（变基）：Rebase是将一个分支的修改应用到另一个分支上。当你执行rebase操作时，Git会将当前分支的修改“移动”到目标分支的最新提交之后。这个过程中，Git会逐个应用当前分支的提交，创建新的提交，并将当前分支指向这些新的提交。Rebase操作会使得提交历史变得线性，看起来更加整洁。

区别：

历史记录：Merge操作会保留被合并分支的完整历史记录，而Rebase操作会将当前分支的修改“移动”到目标分支的最新提交之后，使得提交历史变得线性。
分支关系：Merge操作会创建一个新的提交，有两个或多个父节点，分别指向被合并的分支。Rebase操作会将当前分支的修改应用到目标分支上，不会创建新的提交。
冲突解决：Merge操作可能会导致冲突，需要手动解决。Rebase操作也可能会导致冲突，但是冲突解决的方式不同，需要逐个应用当前分支的提交。

git删除分支
git branch -D <branch_name>
git push origin --delete <branch_name>
